#Trabalho em conjunto de GTSA e ACCS2
#1 Descarregue o arquivo .csv da planilha e imprima o dataframe obtido exatamente do jeito que ele se encontra.
x = read.csv("Sandler.csv")
TITULOS = (x$TITULOS) #Nomes como na planilha para o dataframe ter mesmo nome de colunas
NOTAS =(x$NOTAS)
auxvkt = (x$NOTAS)
ANO = (x$ANO)
data.frame(TITULOS,NOTAS,ANO) 
#2 Encontre a média das notas
y = 0 
for(a in NOTAS){ #Coleta os valores
  y = y + a
}
y = y/48  #Número de elementos da planilha, alterado caso houvesse número maior
#Poderia ter utilizado um contador dentro do for para específicar o número...
print(y)
#3 Encontre o desvio padrão das notas

l = 0 
k = 0
for(a in NOTAS){
  k = (a-y)
  l = l + (k*k)
}
l = sqrt(l/48) 
print(l)
#4 Encontre a moda das notas
auxvkt = sort(auxvkt,decreasing = FALSE)#Ordena elementos para ter elementos iguais seguidos
a = 2 #Segunda posição
aux = 0
laux = 0
resp = 0
while(a<=48){
  if(auxvkt[a] == auxvkt[a-1]){
    aux = aux + 1
  }else{
    if(laux < aux){ #Seta a resposta como a maior moda já encontrada
      #Garantido de não haver o mesmo elemento adiante
      laux = aux 
      aux = 0
      resp = auxvkt[a-1]
    }
  }
  a = a+1
}
print(resp)
#5 Faça uma função que retorna apenas os nomes dos filmes que possuem notas maiores ou iguais a seis
over6 = function(){
  a = 1
  aux = 1
  filmes = c("")
  while(a<=48){ #Percorre vetor
    if(NOTAS[a] >=6){
      print(TITULOS[a], max.levels = 0)
    }
    a = a+1
  }
}
over6()
#6 Faça uma função que retorna quantos filmes possuem notas abaixo de seis
under6 = function(){
  a = 1 
  answ = 0
  while(a<=48){
    if(NOTAS[a]<6){#Caso sua nota seja abaixo de 6, incrementa
      answ = answ + 1
    }
    a = a+1
  }
  print(answ) 
}
under6()
#7 Faça uma função que retorna o nome do filme com menor pontuação e o nome do filme com maior pontuação, nessa ordem.
#Por fim, faça um dataframe com os dois filmes encontrados com as colunas TÍTULO, NOTA, ANO assim como o original.
worstBest = function(){
  a = 1 
  FILM = c("            ","               ")#Caso não se importe, nao fiz EXATAMENTE igual
  YEAR = c(0,0)#Pois os vetores possuem nome diferente, deixando o dataframe com os nomes diferentes
  GRADE = c(0,0)#Mas deixei em Inglês para ser o mais próximo possivel
  auxvkt = (x$NOTAS)
  auxvkt = sort(auxvkt,decreasing = FALSE)
  while(a<=48){
    if(NOTAS[a] == auxvkt[1]){
      YEAR[1] = ANO[a]
      GRADE[1] = NOTAS[a]
      FILM[1] = toString(TITULOS[a])     
    }else if(NOTAS[a] == auxvkt[48]){
      YEAR[2] = ANO[a]
      GRADE[2] = NOTAS[a]
      FILM[2] = toString(TITULOS[a])
    }
    a = a+1
  }
  data.frame(FILM,GRADE,YEAR)
}
worstBest()
niceYear = function(){ #8 Retornar ano com maior numero de filmes com nota maior que 6.5
  answ = 0 # Mas não o funcional
  a = 1
  k = 1
  filmes = c()
  notao = c()
  while(a<=48){
    if(NOTAS[a] > 6.5){
      if(ANO[a] %in% filmes){
        zum = 1
        while(zum<k){
          if(filmes[zum] == ANO[a]){
            notao[zum] = notao[zum] + 1
            answ = max(answ, notao[zum])
            break
          }else{
            z = z+1
          }
        }
      }else{
        filmes[k] = ANO[a]
        notao[k] = 1
        answ = max(answ,notao[k])
        k = k+1
      }
    }
    a = a+1
  }
  print(answ)
}
niceYear()
#8 Faça uma função que retorne o ano em que saíram 
#mais filmes com notas maiores ou iguais a seis e meio (6,5).
niceYear2 = function(){  
  a = 1
  answ = 0
  resp = 0
  vec = c(1:2800)
  for(b in vec){
    vec[b] = 0
  }
  while(a<=48){
    if(NOTAS[a] >= 6.5){
      vec[ANO[a]] = vec[ANO[a]] + 1
      if(answ < vec[ANO[a]]){
        answ = vec[ANO[a]]
        resp = ANO[a]
      }
    }
    a = a + 1
  }
  print(resp)
}
niceYear2()
#9 Faça um histograma onde mostra a frequência de filmes 
#com notas maiores ou iguais a seis de cada ano.
a = 1
vec = c(1993:2018)
while(a<=48){
  if(NOTAS[a] >= 6){
    vec[ANO[a]-1993] = vec[ANO[a]-1993] + 1
  }
  a = a + 1
}
hist(vec, breaks = 26, col ="chartreuse4", labels = TRUE, ylim = c(0,3.5), xlim = c(1993,2018))
